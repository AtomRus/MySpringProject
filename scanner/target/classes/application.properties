spring.application.name=scanner
spring.mvc.hiddenmethod.filter.enabled=true
# =====================================
# Настройки подключения к PostgreSQL
# =====================================

# URL подключения к базе данных
# Формат: jdbc:postgresql://<хост>:<порт>/<имя_базы>
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres

# Имя пользователя БД (обычно 'postgres' по умолчанию)
spring.datasource.username=postgres

# Пароль пользователя БД
spring.datasource.password=postgres

spring.liquibase.enabled=true
spring.liquibase.change-log=classpath:db/changelog/changelog-master.yaml

debug=true
# Драйвер JDBC (Spring Boot обычно определяет автоматически, но можно указать явно)
spring.datasource.driver-class-name=org.postgresql.Driver

# =====================================
# Настройки Hibernate / JPA
# =====================================

# Диалект Hibernate для PostgreSQL
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Автоматическое создание/обновление таблиц (режим DDL):
# none    - ничего не делать
# update  - обновлять схему (без удаления данных)
# create  - создавать заново (удаляет старые таблицы!)
# create-drop - создавать при старте и удалять при завершении (для тестов)
spring.jpa.hibernate.ddl-auto=none

# Показывать SQL-запросы в логах (удобно для разработки)
spring.jpa.show-sql=true

# Форматировать SQL для удобного чтения
spring.jpa.properties.hibernate.format_sql=true

# Управление пулом соединений (HikariCP - дефолтный пул в Spring Boot)
# Минимальное количество соединений
spring.datasource.hikari.minimum-idle=5

# Максимальное количество соединений
spring.datasource.hikari.maximum-pool-size=20

# Таймаут простоя соединения (мс)
spring.datasource.hikari.idle-timeout=30000

# =====================================
# Дополнительные настройки
# =====================================

# Кэш второго уровня (если используется)
# spring.jpa.properties.hibernate.cache.use_second_level_cache=true
# spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.EhCacheRegionFactory

# Включить статистику Hibernate (для отладки)
# spring.jpa.properties.hibernate.generate_statistics=true

# Кодировка для работы с БД

logging.level.root = info
logging.level.com.example.demo.controller.PersonController = debug
logging.file.name=./logs

